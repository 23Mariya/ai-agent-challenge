import pandas as pd
import pytest
from pathlib import Path
import importlib

# --- List of all targets you want to test ---
# Pytest will automatically run this test for each bank in the list.
TARGETS = ["icici"] # Add more here like "hdfc", "axis", etc.

@pytest.mark.parametrize("target", TARGETS)
def test_parser_output(target):
    """
    Tests that an agent-generated parser produces a DataFrame that
    exactly matches its corresponding sample CSV.
    """
    pdf_path = Path(f"data/{target}/{target}_sample.pdf")
    csv_path = Path(f"data/{target}/{target}_sample.csv")
    parser_module_path = f"custom_parsers.{target}_parser"

    # 1. Dynamically import the parser module generated by the agent
    try:
        parser_module = importlib.import_module(parser_module_path)
    except ImportError:
        pytest.fail(
            f"Could not import parser for '{target}'. "
            f"Ensure agent has run successfully and '{parser_module_path.replace('.', '/')}.py' exists."
        )

    # 2. Get the actual DataFrame from the generated parser
    actual_df = parser_module.parse(str(pdf_path))

    # 3. Get the expected DataFrame from the ground-truth CSV
    expected_df = pd.read_csv(csv_path)
    for col in ['Debit Amt', 'Credit Amt', 'Balance']:
        expected_df[col] = pd.to_numeric(expected_df[col], errors='coerce')

    # 4. Reset index on both DataFrames for a clean comparison
    actual_df.reset_index(drop=True, inplace=True)
    expected_df.reset_index(drop=True, inplace=True)

    # 5. Assert that the two DataFrames are identical
    pd.testing.assert_frame_equal(actual_df, expected_df)